---
title: "Bellabeat Case Study in R"
author: "Kayla Hong"
date: "21/02/2022"
output:
  html_document: default
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## **About Bellabeat**

Bellabeat is a high-tech manufacturer of health-focused products for women, and meet different characters and team members. Below is the list of Bellabeat's product.

* Bellabeat app: The Bellabeat app provides users with health data related to their activity, sleep, stress,
menstrual cycle, and mindfulness habits. This data can help users better understand their current habits and
make healthy decisions. The Bellabeat app connects to their line of smart wellness products.
* Leaf: Bellabeat’s classic wellness tracker can be worn as a bracelet, necklace, or clip. The Leaf tracker connects
to the Bellabeat app to track activity, sleep, and stress.
* Time: This wellness watch combines the timeless look of a classic timepiece with smart technology to track user
activity, sleep, and stress. The Time watch connects to the Bellabeat app to provide you with insights into your
daily wellness.
* Spring: This is a water bottle that tracks daily water intake using smart technology to ensure that you are
appropriately hydrated throughout the day. The Spring bottle connects to the Bellabeat app to track your
hydration levels

For more details of Bellabeat, please see [here](https://bellabeat.com/).


## **About this Project**

This project will focus on Bellabeat app and analyze smart device data to gain insight into how consumers are using their smart devices. This report is presented to the Bellabeat executive team along with recommendations for Bellabeat’s marketing strategy.


## **About the data source**

Data is provided from a public source - [Kaggle](https://www.kaggle.com/).

This dataset generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016-05.12.2016. Thirty eligible Fitbit users consented to the submission of personal tracker data. Variation between output represents use of different types of Fitbit trackers and individual tracking behaviors / preferences. And it is cited in [Zenodo](https://zenodo.org/record/53894#.YMoUpnVKiP9). 

For more details on the data source, please see [here](https://www.kaggle.com/arashnic/fitbit/version/1.).

## **Process**

R was used in this Project as there is a large variety of libraries allowing data cleansing and analysis. And plotting and graphing functions allow understanding the relationship between data. 

#### Setting up my environment 

Notes: Setting up my R environment by loading the "tidyverse", "lubridate" and "dplyr" packages.
```{r loading packages, message=FALSE, warning=FALSE, paged.print=FALSE}
library(tidyverse)
library(lubridate)
library(dplyr)
```

#### Importing data frame
```{r loading db, message=FALSE, warning=FALSE, paged.print=FALSE}
daily_activity = read.csv("dailyActivity_merged.csv")
sleep_day = read.csv("sleepDay_merged.csv")
hourlyCalories = read.csv("hourlyCalories_merged.csv")
dailyCalories = read.csv("dailyCalories_merged.csv")
weightLog = read_csv("weightLogInfo_merged.csv")
```

## **Exploring some key tables**

Use *glimpse* to preview the column name and data type of each data frame.
We will then also examine the deliverable for data formatting and cleaning.

```{r glimpse - daily_activity}
glimpse(daily_activity)
```

```{r glimpse - sleep_day }
glimpse(sleep_day )
```

```{r glimpse - hourlyCalories }
glimpse(hourlyCalories )
```

```{r glimpse - dailyCalories }
glimpse(dailyCalories )
```

```{r glimpse - weightLog }
glimpse(weightLog )
```

Note:

As all data frame contains a date-related field, all will be renamed to Date for consistency.

```{r renaming col}
daily_activity <- daily_activity %>%
  rename(Date=ActivityDate)

sleep_day <- sleep_day %>%
  rename(Date=SleepDay)

hourlyCalories <- hourlyCalories %>%
  rename(Date=ActivityDate)

dailyCalories <- dailyCalories %>%
  rename(Date=ActivityDay)
```

Data type of field Date/ ActivityDay/ ActivityDate/ SleepDay/ ActivityDate in all data frame is Character, it should be converted to datetime in mmddyy format.

```{r converting format }
daily_activity$Date = as.POSIXct(daily_activity$Date,tz="GMT", format = "%m/%d/%Y")
sleep_day$Date = as.POSIXct(sleep_day$Date,tz="GMT", format = "%m/%d/%Y")
hourlyCalories$Date = as.POSIXct(hourlyCalories$Date,tz="GMT", format = "%m/%d/%Y")
dailyCalories$Date = as.POSIXct(dailyCalories$Date,tz="GMT", format = "%m/%d/%Y")
weightLog$Date = as.POSIXct(weightLog$Date,tz="GMT", format = "%m/%d/%Y")
```

Data set states that the data was provided from 30 fitbit users. We'd like find out if we have a completed and distinct dataset.

```{r distinct  - daily_activity$Id }
n_distinct(daily_activity$Id)
```

```{r distinct  - sleep_day$Id }
n_distinct(sleep_day$Id)
```

```{r distinct  - hourlyCalories$Id }
n_distinct(hourlyCalories$Id)
```

```{r distinct  - dailyCalories$Id }
n_distinct(dailyCalories$Id)
```

```{r distinct  - weightLog$Id }
n_distinct(weightLog$Id)
```

We can see there are 33 unique participant ID found in daily_activity, hourlyCalories and dailyCalories, this indicates data set contain foreign data that we don’t recognize that might impact the result. 

We can also see that there are only 8 users been entering data in Weightlog,which is much lower than the other data frame.

## Recommendation 
The number of participants in weight log is much lower than the other df. According to the data dictionary, “Weight data can be entered by participants using the mobile app or Fitbit dashboard, or by using a scale connected to the Fitbit account (Aria or Withings).”. This might indicate a need for push notification/ reminders for users to enter their weight, or promote the scaling product - Aria or Withings to encourage more accurate results. 

## **Analysis - 1**

We begin with the data frame - *daily_activity*, With below plot to show the correlation between total steps and the calories burned.


```{r Calories VS Total Steps, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
ggplot(daily_activity) +
  geom_point(mapping=aes(x=TotalSteps, y=Calories))+
  geom_smooth(mapping=aes(x=TotalSteps, y=Calories))+
  labs(title = "Calories VS Total Steps")
```

Use *summary* to take a closer look for the data frame

```{r summary - daily_activity }
daily_activity %>%
  select(TotalSteps,
  TotalDistance,
  Calories) %>%
summary()
```

From the above we can see apart from from the huge gap between users’ usage, there is also at least one day where one or more user has no activity traced at all. 

Use *pipe* and *count* to look for the number of occurrence where TotalSteps/ TotalDistance and Calories return 0

```{r 0 act - Calories }
daily_activity %>%
  count(daily_activity$Calories == '0')
```

```{r 0 act - TotalSteps }
daily_activity %>%
  count(daily_activity$TotalSteps == '0')
```

```{r 0 act - TotalDistance }
daily_activity %>%
  count(daily_activity$TotalDistance == '0')
```

## Recommendation

From the above we can see roughly 10% of the testing period users were shown having no activity at all, it might be because they were genuinely not exercising on those days or had forgotten to put on the Fitbit device?  This might indicate a need for push notification/ reminders for users to put on the device, or do some gentle exercise if they have been in active for too long.

## **Analysis - 2**

Move on to the data frame - *hourlyCalories*, we want to look at the amount of Calories burned throughout different time range.

```{r ActivityHour VS Calories burned, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
ggplot(hourlyCalories) +
  geom_point(mapping=aes(x=ActivityHour, y=Calories))+
  labs(title = "ActivityHour VS Calories burned")
```


We can see the some users are relatively more active in hour 6am (before work), 2pm(lunch time) and 5pm (after work). 

We then look at what the mean of calories burned tell us.

```{r mean_hourlyCalories }
mean_hourlyCalories = hourlyCalories %>%
  group_by(ActivityHour) %>% 
  summarise(mean_Calories = mean(Calories,na.rm = T),.group="drop") %>%
  arrange(desc(mean_Calories))
```

```{r glimpse mean_hourlyCalories }
glimpse(mean_hourlyCalories)
```

```{r ActivityHour VS Mean - Calories burned, echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
ggplot(mean_hourlyCalories) +
  geom_point(mapping=aes(x=ActivityHour, y=mean_Calories))+
  labs(title = "ActivityHour VS Mean - Calories burned")
```

From above table and graph, we can see the majority of users burn the most calories (being active) near work-finishing hour (16pm-19pm). And they are less active during morning/ early working hours. 

## Recommendation

By knowing the trend of when the inactive and active period is, Bellabeat app can consider pushing notification/ remind to encourage users to do some mild exercise before or during working hours, for example, suggestion for biking/ walking routine, walking to the conference room instead of taking elevator etc.

While during active period,  Bellabeat can consider hosting live event on social media/ their own app community platform, to encourage more users to exercise together to expand their brand. This can also be an opportunity for Bellabeat to send out reminder to users to keep hydrated, and to promote their product -  Spring which tracks daily water intake.

## **Analysis - 3**

Move on to the data frame - *sleep_day*, we’ll first look at the summary

```{r summary - sleep_day }
sleep_day %>%  
  select(TotalSleepRecords,
         TotalMinutesAsleep,
         TotalTimeInBed) %>%
  summary()
```

We can see there is a huge different between the mini and maximum number in the column TotalMinutesAsleep, that some users claimed to have slept less than 1 hour per day, while some 13. 

For easier illustration, *mutate* function is used to add a new column onto data frame - sleep_day  to show total Hours Asleep.

```{r adding col TotalHoursAsleep  }
sleep_day = mutate(sleep_day, TotalHoursAsleep =TotalMinutesAsleep/60)
```

Use *filter* function to see the sleep record consists of less than 6 hours.

```{r filter - sleep_day }
filtered_TotalMinutesAsleep = sleep_day %>%  
    filter(TotalSleepRecords == 1) %>%
    filter(TotalHoursAsleep < 6) %>%
    arrange(TotalHoursAsleep )
```
There are a total of 92 entries.
Use n_distinct function to see the number of users having less than 6 hours sleep in any of the entry,

```{r distinct - TotalMinutesAsleep$Id }
n_distinct(filtered_TotalMinutesAsleep$Id)
```

which is more than 70% of the users. 

```{r plot - sleep_day }
ggplot(sleep_day) +
  geom_bar(aes(x=TotalHoursAsleep))+
  labs(x= "Total Hours Asleep", y="Count" ) +
  labs(title = "Total Hours Asleep")
```

## Recommendation

With the above data showing the lack of sleep issue among users, Bellabeat app could introduce some of their smart wellness products which facilitate easy sleeping; or create new functions like bedtime mindfulness exercise or music.

To further investigate the correlation between total hours asleep and the amount of calories burned, date frame *sleep_day* & *daily_activity* are combined into a new data frame *Sleep_Carlories*, as they both have field *Id*.

```{r merging 2 df - sleep_day }
combined_data <- merge(sleep_day, daily_activity, by="Id")
```

An the mean of Calories burned is calculatet.

```{r mean - mean_Calories }
Sleep_Carlories = combined_data %>%
  group_by (TotalHoursAsleep) %>%
  summarise(mean_Calories = mean(Calories,na.rm = T),.group="drop")
```

A plot is generated to check the correlation between total hours asleep and mean-calories burned.

```{r plot - Sleep_Carlories }
ggplot(Sleep_Carlories) +
  geom_point(mapping=aes(x=TotalHoursAsleep, y=mean_Calories))+
  labs(title = "ActivityHour VS Mean - Calories burned")
```

From the plot above we can see the highest mean-calories(burned) were achieved with the total hours asleep ranged from 5.5-9.5  hours, which is a relatively large time range. And we can also see some high mean-calories achieved with less than 2.5 hours asleep. With the current data set, there no significant relationship could be drawn.

## Recommendation for future studies

However, considering the data set size is only 30 participants, Bellabeat would regard the correlation between number of hours asleep and calories burned as their next project, aiming to use the outcome to understand users’ sleeping habits, and to create opportunity to shape healthy decisions, for example, pop up messages/ reminders in devices to influence users’ decision.

## **Summary**

- With the Bellabeat app, amounts of calories burned throughout the day were recorded. Positive correlation was discovered between total steps and calories burned.
- Users were found being the calories (being active) near work-finishing hour (16pm-19pm), and less active during morning/ early working hours.
- More than 70% of the users had experienced at least 1 night sleeping less than 6 hours during the test period.

## Limitation

- Not all data had been captured in the reports or entered by users, for example, weight.
- Not all the user had been using the device or doing any activity with the device at all  throughout the test period.

## Recommendation

- Push notification/ reminders for users to enter their data
- Providing discount bundle for Bellabeat product to encourage automatic data capture
- Push notification/ reminders for encouraging users to do some mild exercise during non-active period (before or during working hours), for example, suggestion for biking/ walking routine, walking to the conference room instead of taking elevator etc
- Host live event during active period (after working hours), to strength the Bellabeat community bonding.
- Push notification/ reminders for encouraging users to stay hydrated after active period - promote Spring which tracks daily water intake.
- Introduce Bellabeat smart wellness products which facilitate easy sleeping; or create new functions like bedtime mindfulness exercise or music.

